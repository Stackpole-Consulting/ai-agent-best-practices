version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: taskmanager_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskmanager
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d taskmanager"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - taskmanager_network

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskmanager_app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/.venv  # Prevent overwriting container's venv
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/taskmanager
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_HOURS=24
      - API_V1_PREFIX=/api/v1
      - DEBUG=True
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - taskmanager_network

  # Test Database (separate from dev database)
  test_db:
    image: postgres:15-alpine
    container_name: taskmanager_test_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskmanager_test
    ports:
      - "5433:5432"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d taskmanager_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - taskmanager_network

  # PgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: taskmanager_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@taskmanager.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - taskmanager_network
    profiles:
      - tools  # Only start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  test_postgres_data:
    driver: local

networks:
  taskmanager_network:
    driver: bridge
